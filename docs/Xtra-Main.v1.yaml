Certificate used to sign the license is not signed by JetBrains root certificate (1)openapi: 3.0.0
info:
  title: Xtra Main
  version: '1.0'
  description: xtra panel main api
servers:
  - url: 'http://localhost:3000'
paths:
  '/lines/{id}':
    parameters:
      - schema:
          type: integer
        name: id
        in: path
        description: line id
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Line'
        '404':
          description: Line Not Found
      operationId: get-lines-id
      description: get a single line
    delete:
      summary: ''
      operationId: delete-lines-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Line'
        '404':
          description: Line Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Line'
      description: deletes a line
    patch:
      summary: ''
      operationId: patch-lines-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Line'
        '404':
          description: Line Not Found
      description: 'Update a certain line '
  /lines:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Line'
      operationId: get-lines
      description: |-
        get a number of lines based on query parameters
        if no parameters are given the first 25 records are returned
      parameters:
        - schema:
            type: number
          in: query
          name: page_no
          description: the number of the page
        - schema:
            type: number
          in: query
          name: page_size
          description: the number of elements in the page
    parameters: []
  /channels:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/Channel'
                  pageable:
                    type: object
                    properties:
                      sort:
                        type: object
                        properties:
                          sorted:
                            type: boolean
                          unsorted:
                            type: boolean
                          empty:
                            type: boolean
                      pageNumber:
                        type: number
                      pageSize:
                        type: number
                      offset:
                        type: number
                      paged:
                        type: boolean
                      unpaged:
                        type: boolean
                  totalPages:
                    type: integer
                  totalElements:
                    type: number
                  last:
                    type: boolean
                  first:
                    type: boolean
                  number:
                    type: number
                  sort:
                    type: object
                    properties:
                      sorted:
                        type: boolean
                      unsorted:
                        type: boolean
                      empty:
                        type: boolean
                  numberOfElements:
                    type: number
                  size:
                    type: number
                  empty:
                    type: boolean
      operationId: get-channels
      description: |-
        get a number of channels based on query parameters
        if no parameters are given the first 25 records are returned
      parameters:
        - schema:
            type: number
          in: query
          name: pageNo
          description: the number of the page
        - schema:
            type: number
          in: query
          name: pageSize
          description: the number of elements in the page
        - schema:
            type: string
          in: query
          name: search
          description: text to search columns by
        - schema:
            type: string
          in: query
          name: sortBy
          description: 'field to sort by '
        - schema:
            type: string
          in: query
          name: sortDir
          description: 'sorting direction '
    parameters: []
    post:
      summary: ''
      operationId: post-channels
      responses:
        '201':
          description: Channel Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
      description: create a channel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Channel'
  '/channels/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
        '404':
          description: Line Not Found
      operationId: get-channel-id
      description: get a single channel by its ID
    delete:
      summary: ''
      operationId: delete-channels-id
      responses:
        '200':
          description: OK
        '404':
          description: channel Not Found
      description: deletes a channel by id
    patch:
      summary: ''
      operationId: patch-channels-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
        '404':
          description: Line Not Found
      description: 'Update a certain channel specified by its ID '
  '/channels/start/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: Stream Started
        '404':
          description: channel not found
      operationId: get-channels-start-id
      description: start a channel by passing the id
  '/channels/stop/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: channel stopped
        '404':
          description: channel not found
      operationId: get-channels-stop-id
      description: stop channel by passing the id
components:
  schemas:
    Line:
      title: Line
      type: object
      properties:
        id:
          type: string
    Channel:
      type: object
      title: Channel
      properties:
        name:
          type: string
        stream_type:
          type: string
          enum:
            - CHANNEL
            - MOVIE
            - EPISODE
            - RADIO
        icon:
          type: string
        read_native:
          type: boolean
        stream_all:
          type: boolean
        direct_source:
          type: boolean
        gen_timestamps:
          type: boolean
        rtmp_output:
          type: boolean
        stream_inputs:
          type: array
          items:
            $ref: ''
        servers:
          type: array
          items:
            $ref: '#/components/schemas/Server'
        custom_ffmpeg:
          type: string
    StreamInput:
      title: StreamInput
      type: object
      properties:
        url:
          type: string
      description: Input Class for Streams
    Server:
      title: Server
      type: object
      properties:
        name:
          type: string
        ip:
          type: string
